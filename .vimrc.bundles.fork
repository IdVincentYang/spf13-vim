" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"                    __ _ _____              _
"         ___ _ __  / _/ |___ /      __   __(_)_ __ ___
"        / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
"        \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
"        |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
"            |_|
"
"   This is the personal .vimrc.bundles.fork file of Vincent Yang,
"   While much of it is beneficial for personal use, I would
"   recommend picking out the parts you want and understand.
"
"   If you wish to add or remove individual bundles, use `Bundle` or `UnBundle`.
" }

" Environment {

    " Windows Compatible {

        if has('win32') || has('win64')
            " Be nice and check for multi_byte even if the config requires
            " multi_byte support most of the time
            if has("multi_byte")
                " Windows cmd.exe still uses cp850(MS-DOS Latin-1),
                "  cp950(Traditional Chinese) or cp936(Simplified Chinese).
                "  If Windows ever moved to " Powershell as the primary terminal,
                "  this would be utf-8
                set termencoding=cp936
                " Let Vim use utf-8 internally, because many scripts require this
                set encoding=utf-8
                setglobal fileencoding=utf-8

                set fileformats=unix,mac,dos
            endif
        endif
    " }

" }

" Bundles {

    if !exists("g:override_spf13_bundles")

    " General {
        if count(g:spf13_bundle_groups, 'general')
            " UnBundle 'scrooloose/nerdtree'
            " UnBundle 'altercation/vim-colors-solarized'
            UnBundle 'spf13/vim-colors'
            " UnBundle 'tpope/vim-surround'
            UnBundle 'tpope/vim-repeat'
            UnBundle 'spf13/vim-autoclose'
            UnBundle 'ctrlpvim/ctrlp.vim'
            UnBundle 'tacahiroy/ctrlp-funky'
            " UnBundle 'kristijanhusak/vim-multiple-cursors'
            " UnBundle 'vim-scripts/sessionman.vim'
            " UnBundle 'matchit.zip'
            if (has("python") || has("python3")) && exists('g:spf13_use_powerline') && !exists('g:spf13_use_old_powerline')
                " UnBundle 'Lokaltog/powerline', {'rtp':'/powerline/bindings/vim'}
            elseif exists('g:spf13_use_powerline') && exists('g:spf13_use_old_powerline')
                " UnBundle 'Lokaltog/vim-powerline'
            else
                " UnBundle 'bling/vim-airline'
            endif
            UnBundle 'bling/vim-bufferline'
            " UnBundle 'Lokaltog/vim-easymotion'
            " UnBundle 'jistr/vim-nerdtree-tabs'
            UnBundle 'flazz/vim-colorschemes'
            UnBundle 'mbbill/undotree'
            " UnBundle 'nathanaelkane/vim-indent-guides'
            if !exists('g:spf13_no_views')
                UnBundle 'vim-scripts/restore_view.vim'
            endif
            ""UnBundle 'mhinz/vim-signify'
            UnBundle 'tpope/vim-abolish.git'
            UnBundle 'osyo-manga/vim-over'
            UnBundle 'kana/vim-textobj-user'
            UnBundle 'kana/vim-textobj-indent'
            UnBundle 'gcmt/wildfire.vim'

            Bundle 'yegappan/mru'
            "Bundle 'acx0/Conque-shell'
            " undotree install of gundo"
            Bundle 'sjl/gundo.vim'
            " Auto detect CJK and Unicode file encodings.
            "Bundle 'mbbill/fencview', to slow, disable default
            " highlight mark line in the left sign column.
            Bundle 'exvim/ex-showmarks'
            " making a column of increasing or decreasing numbers
            Bundle 'exvim/ex-visincr'

            " :Unite
            Bundle 'Shougo/unite.vim'
            " vimproc need by unite.
            Bundle 'Shougo/vimproc.vim'
        endif
    " }

    " Writing {
        if count(g:spf13_bundle_groups, 'writing')
            " UnBundle 'reedes/vim-litecorrect'
            " UnBundle 'reedes/vim-textobj-sentence'
            " UnBundle 'reedes/vim-textobj-quote'
            " UnBundle 'reedes/vim-wordy'
        endif
    " }

    " General Programming {
        if count(g:spf13_bundle_groups, 'programming')
            " Pick one of the checksyntax, jslint, or syntastic
            UnBundle 'scrooloose/syntastic'
            " UnBundle 'tpope/vim-fugitive'
            UnBundle 'mattn/webapi-vim'
            " UnBundle 'mattn/gist-vim'
            " UnBundle 'scrooloose/nerdcommenter'
            UnBundle 'tpope/vim-commentary'
            " UnBundle 'godlygeek/tabular'
            if executable('ctags')
                " UnBundle 'majutsushi/tagbar'
            endif

            Bundle 'a.vim'
            Bundle 'jiangmiao/auto-pairs'
            Bundle 'vim-scripts/TaskList.vim'
            Bundle 'Valloric/ListToggle'
            Bundle 'thinca/vim-ref'
            Bundle 'jansenm/vim-cmake'
            Bundle 'vim-scripts/vim-cmake-project'

        endif
    " }

    " Snippets & AutoComplete {
        if count(g:spf13_bundle_groups, 'snipmate')
            " UnBundle 'garbas/vim-snipmate'
            " UnBundle 'honza/vim-snippets'
            " Source support_function.vim to support vim-snippets.
            if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
                source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
            endif
        elseif count(g:spf13_bundle_groups, 'youcompleteme')
            " UnBundle 'Valloric/YouCompleteMe'
            " UnBundle 'SirVer/ultisnips'
            " UnBundle 'honza/vim-snippets'
        elseif count(g:spf13_bundle_groups, 'neocomplcache')
            " UnBundle 'Shougo/neocomplcache'
            " UnBundle 'Shougo/neosnippet'
            " UnBundle 'Shougo/neosnippet-snippets'
            " UnBundle 'honza/vim-snippets'
        elseif count(g:spf13_bundle_groups, 'neocomplete')
            " UnBundle 'Shougo/neocomplete.vim.git'
            " UnBundle 'Shougo/neosnippet'
            " UnBundle 'Shougo/neosnippet-snippets'
            " UnBundle 'honza/vim-snippets'
        endif
    " }

    " Javascript {
        if count(g:spf13_bundle_groups, 'javascript')
            " UnBundle 'elzr/vim-json'
            UnBundle 'groenewege/vim-less'
            UnBundle 'pangloss/vim-javascript'
            UnBundle 'briancollins/vim-jst'
            UnBundle 'kchmck/vim-coffee-script'
        endif
    " }

    " Misc {
        if count(g:spf13_bundle_groups, 'misc')
            UnBundle 'wting/rust.vim'
            " UnBundle 'tpope/vim-markdown'
            UnBundle 'spf13/vim-preview'
            UnBundle 'tpope/vim-cucumber'
            UnBundle 'cespare/vim-toml'
            UnBundle 'quentindecock/vim-cucumber-align-pipes'
            UnBundle 'saltstack/salt-vim'
        endif
    " }

    endif

" }

